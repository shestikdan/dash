import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂", layout="wide")

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data
def load_data():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    df_orders = pd.read_excel('orders.xlsx')
    df_products = pd.read_excel('products.xlsx')
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞—Ç
    df_orders['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'] = pd.to_datetime(df_orders['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'])
    df_orders['–ú–µ—Å—è—Ü'] = df_orders['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].dt.strftime('%Y-%m')
    df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'] = pd.to_datetime(df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'])
    
    return df_orders, df_products

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df_orders, df_products = load_data()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–∞—à–±–æ—Ä–¥–∞
st.title('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂')

# –§–∏–ª—å—Ç—Ä—ã –≤ —Å–∞–π–¥–±–∞—Ä–µ
st.sidebar.header('–§–∏–ª—å—Ç—Ä—ã')

# –§–∏–ª—å—Ç—Ä –ø–æ –¥–∞—Ç–∞–º
date_range = st.sidebar.date_input(
    '–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:',
    [df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].min(), df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].max()]
)

# –§–∏–ª—å—Ç—Ä—ã –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
selected_shops = st.sidebar.multiselect(
    '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã:',
    options=df_orders['–ú–∞–≥–∞–∑–∏–Ω'].unique(),
    default=df_orders['–ú–∞–≥–∞–∑–∏–Ω'].unique()
)

selected_groups = st.sidebar.multiselect(
    '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤:',
    options=df_products['–ì—Ä—É–ø–ø–∞'].unique(),
    default=df_products['–ì—Ä—É–ø–ø–∞'].unique()
)

# –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤
filtered_orders = df_orders[
    (df_orders['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].dt.date.between(date_range[0], date_range[1])) &
    (df_orders['–ú–∞–≥–∞–∑–∏–Ω'].isin(selected_shops))
]

filtered_products = df_products[
    (df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].dt.date.between(date_range[0], date_range[1])) &
    (df_products['–ì—Ä—É–ø–ø–∞'].isin(selected_groups))
]

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
col1, col2, col3 = st.columns(3)
with col1:
    st.metric("–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç", f"{filtered_orders['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].sum():,.0f} ‚Ç∏")
with col2:
    st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤", f"{len(filtered_orders):,}")
with col3:
    st.metric("–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", f"{filtered_orders['–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω'].nunique():,}")

# –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º
st.header('–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂')
monthly_stats = filtered_orders.groupby('–ú–µ—Å—è—Ü').agg({
    '–ó–∞–∫–∞–∑': 'count',
    '–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞': 'sum'
}).reset_index()

fig1 = make_subplots(specs=[[{"secondary_y": True}]])
fig1.add_trace(
    go.Bar(x=monthly_stats['–ú–µ—Å—è—Ü'], y=monthly_stats['–ó–∞–∫–∞–∑'], 
           name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤"),
    secondary_y=False
)
fig1.add_trace(
    go.Scatter(x=monthly_stats['–ú–µ—Å—è—Ü'], y=monthly_stats['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'], 
               name="–û–±–æ—Ä–æ—Ç", line=dict(color='red')),
    secondary_y=True
)
fig1.update_layout(height=400)
st.plotly_chart(fig1, use_container_width=True)

# –ê–Ω–∞–ª–∏–∑ –º–∞–≥–∞–∑–∏–Ω–æ–≤
st.header('–ê–Ω–∞–ª–∏–∑ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º')
col1, col2 = st.columns(2)

with col1:
    st.subheader('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–∞ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º')
    shop_sales = filtered_orders.groupby('–ú–∞–≥–∞–∑–∏–Ω')['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].sum().sort_values(ascending=False)
    top_5_shops = shop_sales.head(5)
    other_shops = pd.Series({'–î—Ä—É–≥–∏–µ': shop_sales[5:].sum()})
    pie_data = pd.concat([top_5_shops, other_shops])
    fig2 = px.pie(values=pie_data.values, names=pie_data.index)
    st.plotly_chart(fig2, use_container_width=True)

with col2:
    st.subheader('–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º')
    avg_check = filtered_orders.groupby('–ú–∞–≥–∞–∑–∏–Ω')['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].mean().sort_values(ascending=False)
    fig_avg = px.bar(x=avg_check.index, y=avg_check.values)
    fig_avg.update_layout(
        xaxis_title="–ú–∞–≥–∞–∑–∏–Ω",
        yaxis_title="–°—Ä–µ–¥–Ω–∏–π —á–µ–∫"
    )
    st.plotly_chart(fig_avg, use_container_width=True)

# –ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤
st.header('–ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤')

# –¢–∞–±–ª–∏—Ü–∞ —Ç–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —á–∞—Å—Ç–æ—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
top_products = filtered_products.groupby('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ').size()\
    .sort_values(ascending=False).head(10).reset_index()
top_products.columns = ['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É']
st.subheader('–¢–æ–ø-10 —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —á–∞—Å—Ç–æ—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É')
st.dataframe(top_products, use_container_width=True)

# –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ –≥—Ä—É–ø–ø–∞–º —Ç–æ–≤–∞—Ä–æ–≤
col1, col2 = st.columns(2)

with col1:
    st.subheader('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ –≥—Ä—É–ø–ø–∞–º')
    group_counts = filtered_products.groupby('–ì—Ä—É–ø–ø–∞').size().sort_values(ascending=False)
    
    # –í—ã–¥–µ–ª—è–µ–º —Ç–æ–ø 6 –≥—Ä—É–ø–ø
    top_6_groups = group_counts.head(10)
    # –°—É–º–º–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≥—Ä—É–ø–ø—ã
    other_groups = pd.Series({'–î—Ä—É–≥–∏–µ': group_counts[10:].sum()})
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ç–æ–ø 6 –∏ "–î—Ä—É–≥–∏–µ"
    final_group_counts = pd.concat([top_6_groups, other_groups])
    
    fig_groups = px.pie(
        values=final_group_counts.values, 
        names=final_group_counts.index,
        title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ –≥—Ä—É–ø–ø–∞–º —Ç–æ–≤–∞—Ä–æ–≤'
    )
    st.plotly_chart(fig_groups, use_container_width=True)

with col2:
    st.subheader('–¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º')
    selected_shop = st.selectbox(
        '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:', 
        filtered_products['–ú–∞–≥–∞–∑–∏–Ω'].unique()
    )
    
    top_products_by_shop = filtered_products[filtered_products['–ú–∞–≥–∞–∑–∏–Ω'] == selected_shop]\
        .groupby('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ').size()\
        .sort_values(ascending=False).head(5)
    
    fig_top_by_shop = px.bar(
        x=top_products_by_shop.index, 
        y=top_products_by_shop.values,
        title=f'–¢–æ–ø-5 —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤ –∫–æ—Ä–∑–∏–Ω—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ {selected_shop}'
    )
    fig_top_by_shop.update_layout(
        xaxis_title="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        yaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É"
    )
    st.plotly_chart(fig_top_by_shop, use_container_width=True)

# –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
tab1, tab2 = st.tabs(["–î–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–∫–∞–∑–∞–º", "–î–∞–Ω–Ω—ã–µ –ø–æ —Ç–æ–≤–∞—Ä–∞–º"])

with tab1:
    if st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–∫–∞–∑–∞–º'):
        st.dataframe(filtered_orders)

with tab2:
    if st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–æ–≤–∞—Ä–∞–º'):
        st.dataframe(filtered_products)