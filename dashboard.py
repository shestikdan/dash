import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

st.set_page_config(page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂", layout="wide")

@st.cache_data
def load_data():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–∞ —Ñ–∞–π–ª–∞
    df_orders = pd.read_excel('orders.xlsx')
    df_products = pd.read_excel('products.xlsx')
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –¥–∞—Ç
    df_orders['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'] = pd.to_datetime(df_orders['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'])
    df_orders['–ú–µ—Å—è—Ü'] = df_orders['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].dt.strftime('%Y-%m')
    df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'] = pd.to_datetime(df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'])
    return df_orders, df_products

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
df_orders, df_products = load_data()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–∞—à–±–æ—Ä–¥–∞
st.title('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂')

# –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç—Ä–∏–∫–∏
col1, col2, col3 = st.columns(3)
with col1:
    st.metric("–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç", f"{df_orders['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].sum():,.0f} ‚Ç∏")
with col2:
    st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤", f"{len(df_orders):,}")
with col3:
    st.metric("–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", f"{df_orders['–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω'].nunique():,}")

# –°–ï–ö–¶–ò–Ø 1: –ê–ù–ê–õ–ò–ó –ü–†–û–î–ê–ñ
st.header('1. –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥–∞–∂')

# 1.1 –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º
monthly_stats = df_orders.groupby('–ú–µ—Å—è—Ü').agg({
    '–ó–∞–∫–∞–∑': 'count',
    '–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞': 'sum'
}).reset_index()

fig1 = make_subplots(specs=[[{"secondary_y": True}]])
fig1.add_trace(
    go.Bar(x=monthly_stats['–ú–µ—Å—è—Ü'], y=monthly_stats['–ó–∞–∫–∞–∑'], 
           name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤"),
    secondary_y=False
)
fig1.add_trace(
    go.Scatter(x=monthly_stats['–ú–µ—Å—è—Ü'], y=monthly_stats['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'], 
               name="–û–±–æ—Ä–æ—Ç", line=dict(color='red')),
    secondary_y=True
)
fig1.update_layout(title='–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º')
st.plotly_chart(fig1, use_container_width=True)

# 1.2 –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–∞ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º (top-5)
col1, col2 = st.columns(2)
with col1:
    shop_sales = df_orders.groupby('–ú–∞–≥–∞–∑–∏–Ω')['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].sum().sort_values(ascending=False)
    top_5_shops = shop_sales.head(5)
    other_shops = pd.Series({'–î—Ä—É–≥–∏–µ': shop_sales[5:].sum()})
    pie_data = pd.concat([top_5_shops, other_shops])
    
    fig2 = px.pie(values=pie_data.values, names=pie_data.index,
                  title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–∞ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º')
    st.plotly_chart(fig2, use_container_width=True)

# 1.3 –°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
with col2:
    avg_check = df_orders.groupby('category')['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].mean().round(0)
    fig3 = px.bar(x=avg_check.index, y=avg_check.values,
                  title='–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
    st.plotly_chart(fig3, use_container_width=True)

# –°–ï–ö–¶–ò–Ø 2: –ê–ù–ê–õ–ò–ó –¢–û–í–ê–†–û–í
st.header('2. –ê–Ω–∞–ª–∏–∑ —Ç–æ–≤–∞—Ä–æ–≤')

# 2.1 –¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —á–∞—Å—Ç–æ—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
top_products = df_products.groupby('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ').size()\
    .sort_values(ascending=False).head(10).reset_index()
top_products.columns = ['–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É']

st.subheader('–¢–æ–ø-10 —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —á–∞—Å—Ç–æ—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É')
st.dataframe(top_products, use_container_width=True)

# 2.2 –ê–Ω–∞–ª–∏–∑ –ø–æ –≥—Ä—É–ø–ø–∞–º —Ç–æ–≤–∞—Ä–æ–≤ –∏ –º–∞–≥–∞–∑–∏–Ω–∞–º
col1, col2 = st.columns(2)

with col1:
   st.subheader('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ –≥—Ä—É–ø–ø–∞–º')
   group_counts = df_products.groupby('–ì—Ä—É–ø–ø–∞').size().sort_values(ascending=False)
   
   # –ë–µ—Ä–µ–º —Ç–æ–ø 8 –≥—Ä—É–ø–ø
   top_8_groups = group_counts.head(8)
   # –°—É–º–º–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤ '–î—Ä—É–≥–∏–µ'
   others = pd.Series({'–î—Ä—É–≥–∏–µ': group_counts[8:].sum()})
   
   # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ç–æ–ø 8 –∏ '–î—Ä—É–≥–∏–µ'
   pie_data = pd.concat([top_8_groups, others])
   
   fig4 = px.pie(values=pie_data.values, 
                 names=pie_data.index,
                 title='–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É –ø–æ –≥—Ä—É–ø–ø–∞–º —Ç–æ–≤–∞—Ä–æ–≤')
   fig4.update_traces(textposition='inside', textinfo='percent+label')
   st.plotly_chart(fig4, use_container_width=True)

with col2:
    st.subheader('–¢–æ–ø —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º')
    selected_shop = st.selectbox('–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:', 
                               df_products['–ú–∞–≥–∞–∑–∏–Ω'].unique())
    
    top_products_by_shop = df_products[df_products['–ú–∞–≥–∞–∑–∏–Ω'] == selected_shop]\
        .groupby('–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ').size()\
        .sort_values(ascending=False).head(5)
    
    fig5 = px.bar(x=top_products_by_shop.index, 
                  y=top_products_by_shop.values,
                  title=f'–¢–æ–ø-5 —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—é –≤ –∫–æ—Ä–∑–∏–Ω—É –≤ –º–∞–≥–∞–∑–∏–Ω–µ {selected_shop}')
    fig5.update_layout(
        xaxis_title="–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞",
        yaxis_title="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –∫–æ—Ä–∑–∏–Ω—É"
    )
    st.plotly_chart(fig5, use_container_width=True)

# –§–∏–ª—å—Ç—Ä—ã –≤ —Å–∞–π–¥–±–∞—Ä–µ
st.sidebar.header('–§–∏–ª—å—Ç—Ä—ã')
date_range = st.sidebar.date_input('–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥:',
                                 [df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].min(),
                                  df_products['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].max()])

selected_groups = st.sidebar.multiselect(
    '–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—ã —Ç–æ–≤–∞—Ä–æ–≤:',
    df_products['–ì—Ä—É–ø–ø–∞'].unique(),
    default=df_products['–ì—Ä—É–ø–ø–∞'].unique()
)

# –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
if st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'):
    tab1, tab2 = st.tabs(["–î–∞–Ω–Ω—ã–µ –ø–æ –∑–∞–∫–∞–∑–∞–º", "–î–∞–Ω–Ω—ã–µ –ø–æ —Ç–æ–≤–∞—Ä–∞–º"])
    with tab1:
        st.dataframe(df_orders)
    with tab2:
        st.dataframe(df_products)