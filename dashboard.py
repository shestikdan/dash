# dashboard.py
import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots

st.set_page_config(page_title="–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂", layout="wide")

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–∞—à–±–æ—Ä–¥–∞
st.title('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–¥–∞–∂')

# –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö
@st.cache_data  # –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
def load_data():
    df = pd.read_excel('–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç 22 —è–Ω–≤ 2025.xlsx')
    df['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'] = pd.to_datetime(df['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'], format='%d.%m.%Y %H:%M:%S')
    df['–ú–µ—Å—è—Ü'] = df['–î–∞—Ç–∞ —Å—Ç–∞—Ç—É—Å–∞'].dt.strftime('%Y-%m')
    return df

df = load_data()

# –°–æ–∑–¥–∞–µ–º –¥–≤–µ –∫–æ–ª–æ–Ω–∫–∏ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–µ—Ç—Ä–∏–∫
col1, col2, col3 = st.columns(3)
with col1:
    st.metric("–û–±—â–∏–π –æ–±–æ—Ä–æ—Ç", f"{df['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].sum():,.0f} ‚Ç∏")
with col2:
    st.metric("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤", f"{len(df):,}")
with col3:
    st.metric("–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤", f"{df['–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω'].nunique():,}")

# –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º
st.subheader('–î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥–∞–∂ –ø–æ –º–µ—Å—è—Ü–∞–º')
monthly_stats = df.groupby('–ú–µ—Å—è—Ü').agg({
    '–ó–∞–∫–∞–∑': 'count',
    '–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞': 'sum'
}).reset_index()

fig1 = make_subplots(specs=[[{"secondary_y": True}]])
fig1.add_trace(
    go.Bar(x=monthly_stats['–ú–µ—Å—è—Ü'], y=monthly_stats['–ó–∞–∫–∞–∑'], 
           name="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤"),
    secondary_y=False
)
fig1.add_trace(
    go.Scatter(x=monthly_stats['–ú–µ—Å—è—Ü'], y=monthly_stats['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'], 
               name="–û–±–æ—Ä–æ—Ç", line=dict(color='red')),
    secondary_y=True
)
fig1.update_layout(height=400)
st.plotly_chart(fig1, use_container_width=True)

# –°–æ–∑–¥–∞–µ–º –¥–≤–∞ —Å—Ç–æ–ª–±—Ü–∞ –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–æ–≤
col1, col2 = st.columns(2)

with col1:
    st.subheader('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–∞ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º')
    shop_sales = df.groupby('–ú–∞–≥–∞–∑–∏–Ω')['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].sum().sort_values(ascending=False)
    top_5_shops = shop_sales.head(5)
    other_shops = pd.Series({'–î—Ä—É–≥–∏–µ': shop_sales[5:].sum()})
    pie_data = pd.concat([top_5_shops, other_shops])
    fig2 = px.pie(values=pie_data.values, names=pie_data.index)
    st.plotly_chart(fig2, use_container_width=True)

with col2:
    st.subheader('–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
    category_sales = df.groupby('group')['–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞'].sum()
    fig4 = px.pie(values=category_sales.values, names=category_sales.index)
    st.plotly_chart(fig4, use_container_width=True)

# –°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
st.subheader('–°—Ä–µ–¥–Ω–∏–π —á–µ–∫ –ø–æ –º–∞–≥–∞–∑–∏–Ω–∞–º –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º')
avg_check = df.pivot_table(
    values='–°—É–º–º–∞ –∑–∞–∫–∞–∑–∞',
    index='–ú–∞–≥–∞–∑–∏–Ω',
    columns='group',
    aggfunc='mean',
    fill_value=0
).round(2)
fig3 = px.bar(avg_check)
st.plotly_chart(fig3, use_container_width=True)

# –î–æ–±–∞–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –≤ —Å–∞–π–¥–±–∞—Ä
st.sidebar.header('–§–∏–ª—å—Ç—Ä—ã')
selected_shops = st.sidebar.multiselect(
    '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω—ã:',
    options=df['–ú–∞–≥–∞–∑–∏–Ω'].unique(),
    default=df['–ú–∞–≥–∞–∑–∏–Ω'].unique()
)

selected_categories = st.sidebar.multiselect(
    '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:',
    options=df['group'].unique(),
    default=df['group'].unique()
)

# –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å –¥–∞–Ω–Ω—ã–º–∏
if st.checkbox('–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ'):
    st.subheader('–î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
    st.dataframe(df)